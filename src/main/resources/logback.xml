<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <conversionRule conversionWord="requestId" converterClass="yokudlela.menu.utils.logging.RequestIdMessageConverter" />
    <conversionRule conversionWord="userId" converterClass="yokudlela.menu.utils.logging.UserIdMessageConverter" />

    <include resource="org/springframework/boot/logging/logback/defaults.xml"/>

    <!-- Don't forget to set "spring.application.name" in application.yml -->
    <springProperty scope="context" name="springAppName" source="spring.application.name"/>
    <property name="LOG_FILE" value="${LOG_FILE:-${LOG_PATH:-logs}/${springAppName}}"/>



    <!-- Appender to log to console in plain text format -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <!-- Minimum logging level to be presented in the console logs-->
            <level>DEBUG</level>
        </filter>
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">

            <providers>

                <contextName>
                    <fieldName>app</fieldName>
                </contextName>
                <timestamp>
                    <fieldName>ts</fieldName>
                    <timeZone>Europe/Budapest</timeZone>
                </timestamp>
                <loggerName>
                    <fieldName>logger</fieldName>
                </loggerName>
                <!-- Assign logger fields to JSON object -->
                <pattern>
                    <pattern>
                        {
                        "severity": "%level",
                        "request": "%requestId",
                        "user": "%userId",
                        "app": "%X{application:-}",
                        "host": "%X{host:-}",
                        "version": "%X{version:-}"
                        }
                    </pattern>
                </pattern>

                <arguments>
                    <includeNonStructuredArguments>true</includeNonStructuredArguments>
                </arguments>
                <message>
                    <fieldName>msg</fieldName>
                </message>

                <!-- Log all MDC fields except the ones from Sleuth - we add them below
                under cleaned up names -->
                <mdc>
                    <excludeMdcKeyName>application</excludeMdcKeyName>
                    <excludeMdcKeyName>host</excludeMdcKeyName>
                    <excludeMdcKeyName>version</excludeMdcKeyName>
                </mdc>
                <callerData>
                    <classFieldName>class</classFieldName>
                    <methodFieldName>method</methodFieldName>
                    <lineFieldName>line</lineFieldName>
                    <fileFieldName>file</fileFieldName>
                </callerData>
                <threadName>
                    <fieldName>thread</fieldName>
                </threadName>
                <!-- Include Exception stack traces -->
                <stackTrace>
                    <fieldName>stack</fieldName>
                </stackTrace>

            </providers>
        </encoder>

    </appender>

    <!-- Appender to log to file in plain text format -->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_FILE}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}.%d{yyyy-MM-dd}.gz</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${FILE_LOG_PATTERN}</pattern>
            <charset>utf8</charset>
        </encoder>
    </appender>


    <root level="INFO">
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="FILE"/>
    </root>

</configuration>